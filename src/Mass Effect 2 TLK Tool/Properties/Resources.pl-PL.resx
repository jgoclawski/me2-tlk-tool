<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutDecodingTlk" xml:space="preserve">
    <value>Dekodowanie formatu TLK:</value>
  </data>
  <data name="AboutMiscUtil" xml:space="preserve">
    <value>Ta aplikacja korzysta z bilbioteki, której autorami są Jon Skeet i Marc Gravell. Kontakt: skeet@pobox.com lub na stronie http://www.pobox.com/~skeet/.</value>
  </data>
  <data name="AboutRest" xml:space="preserve">
    <value>Zapis do TLK, interfejs graficzny:</value>
  </data>
  <data name="AboutTitle" xml:space="preserve">
    <value>Mass Effect 2 TLK Tool - informacje</value>
  </data>
  <data name="AlertExceptionGeneric" xml:space="preserve">
    <value>Wystąpił błąd. Zgłoś go autorowi (Gocek na social.bioware.com)!
</value>
  </data>
  <data name="AlertExceptionGenericDescription" xml:space="preserve">
    <value>Opis błędu: </value>
  </data>
  <data name="AlertExceptionTlkFormat" xml:space="preserve">
    <value>Bład czytania pliku TLK!
Upewnij się, że wybrano plik w formacie TLK dla gry Mass Effect 2.</value>
  </data>
  <data name="AlertExceptionTlkNotFound" xml:space="preserve">
    <value>Wybrano nieistniejący lub błędny plik TLK.</value>
  </data>
  <data name="AlertExceptionWrongPlatformPC" xml:space="preserve">
    <value>Bład czytania pliku TLK!
Wygląda na to, że próbujesz wczytać plik TLK przeznaczony dla konsoli Xbox360, ale w Ustawieniach zaznaczono format dla komputera PC.</value>
  </data>
  <data name="AlertExceptionWrongPlatformXbox360" xml:space="preserve">
    <value>Bład czytania pliku TLK!
Wygląda na to, że próbujesz wczytać plik TLK przeznaczony dla komputera PC, ale w Ustawieniach zaznaczono format dla konsoli Xbox360.</value>
  </data>
  <data name="AlertExceptionXmlNotFound" xml:space="preserve">
    <value>Wybrano nieistniejący lub błędny plik XML.</value>
  </data>
  <data name="AlertPre103XML" xml:space="preserve">
    <value>Wczytujesz plik XML, który został utworzony w starszej wersji programu! Aby go dostosować do aktualnie używanej wersji, przeczytaj wpis stąd: http://social.bioware.com/project/3492/discussion/2571/ !</value>
  </data>
  <data name="AlertTlkLoadingFinished" xml:space="preserve">
    <value>Czytanie pliku TLK zakończone.</value>
  </data>
  <data name="AlertWritingTlkFinished" xml:space="preserve">
    <value>Tworzenie pliku TLK zakończone.</value>
  </data>
  <data name="ChangeButton" xml:space="preserve">
    <value>Zmień...</value>
  </data>
  <data name="CheckboxDebugTlk" xml:space="preserve">
    <value>Wersja do testów (wyświetla String ID przed każdą linią tekstu w grze)</value>
  </data>
  <data name="CurrentInputTlkFilePath" xml:space="preserve">
    <value>Aktualna ścieżka do pliku TLK:</value>
  </data>
  <data name="CurrentInputXmlFilePath" xml:space="preserve">
    <value>Aktualna ścieżka do pliku XML::</value>
  </data>
  <data name="CurrentOutputTextFile" xml:space="preserve">
    <value>Aktualna ścieżka do wyjściowego pliku tekstowego:</value>
  </data>
  <data name="CurrentOutputTlkFilePath" xml:space="preserve">
    <value>Aktualna ścieżka do wyjściowego pliku TLK:</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Gotowe!</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Błąd</value>
  </data>
  <data name="HowTo11" xml:space="preserve">
    <value>Wybierz zakładkę 'Wczytaj plik TLK'.</value>
  </data>
  <data name="HowTo12" xml:space="preserve">
    <value>'Aktualna ścieżka do pliku TLK' powinna wskazywać na plik, który ma być odczytany. Mozna ją zmienić klikając na przycisk 'Zmień...'.</value>
  </data>
  <data name="HowTo13" xml:space="preserve">
    <value>'Aktualna ścieżka do wyjściowego pliku XML' powinna wskazywać na nowy plik, do którego ma być zapisany odczytany tekst.</value>
  </data>
  <data name="HowTo14" xml:space="preserve">
    <value>Naciśnij 'Start!' i poczekaj.</value>
  </data>
  <data name="HowTo15" xml:space="preserve">
    <value>Po chwili pojawi się okienko, mówiące że praca skończona. Wybrany plik XML zawiera teraz odczytane teksty z pliku TLK.</value>
  </data>
  <data name="HowTo21" xml:space="preserve">
    <value>Wybierz zakładkę 'Stwórz plik TLK'.</value>
  </data>
  <data name="HowTo22" xml:space="preserve">
    <value>'Aktualna ścieżka do pliku XML' powinna wskazywać na utworzony wcześniej plik XML (zmodyfikowany lub nie).</value>
  </data>
  <data name="HowTo23" xml:space="preserve">
    <value>'Aktualna ścieżka do wyjściowego pliku TLK' powinna wskazywać na nowy plik TLK, który ma zostać utworzony.</value>
  </data>
  <data name="HowTo24" xml:space="preserve">
    <value>Naciśnij 'Start!' i poczekaj.</value>
  </data>
  <data name="HowTo25" xml:space="preserve">
    <value>Po ukończeniu pracy, nowo-utworzony plik TLK jest przygotowany do wrzucenia go do odpowiedniego folderu gry Mass Effect 2.</value>
  </data>
  <data name="HowToHeader" xml:space="preserve">
    <value>Podstawowe kroki</value>
  </data>
  <data name="HowToSubheader1" xml:space="preserve">
    <value>Wyciąganie tekstu z pliku TLK</value>
  </data>
  <data name="HowToSubheader2" xml:space="preserve">
    <value>Tworzenie nowego pliku TLK</value>
  </data>
  <data name="HowToTitle" xml:space="preserve">
    <value>Jak używać?</value>
  </data>
  <data name="LoadTlkTab" xml:space="preserve">
    <value>Wczytaj plik TLK</value>
  </data>
  <data name="MenuAbout" xml:space="preserve">
    <value>Informacje</value>
  </data>
  <data name="MenuExit" xml:space="preserve">
    <value>Zakończ</value>
  </data>
  <data name="MenuFile" xml:space="preserve">
    <value>Plik</value>
  </data>
  <data name="MenuHelp" xml:space="preserve">
    <value>Pomoc</value>
  </data>
  <data name="MenuSettings" xml:space="preserve">
    <value>Ustawienia</value>
  </data>
  <data name="MenuSettingsPC" xml:space="preserve">
    <value>Format TLK dla komputera PC</value>
  </data>
  <data name="MenuSettingsXbox360" xml:space="preserve">
    <value>Format TLK dla konsoli Xbox360</value>
  </data>
  <data name="TextFilesFilter" xml:space="preserve">
    <value>Pliki XML (*.xml)|*.xml</value>
  </data>
  <data name="TlkFilesFilter" xml:space="preserve">
    <value>Pliki TLK (*.tlk)|*.tlk</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Uwaga!</value>
  </data>
  <data name="WriteTlkTab" xml:space="preserve">
    <value>Stwórz plik TLK</value>
  </data>
  <data name="XmlFilesFilter" xml:space="preserve">
    <value>Pliki XML (*.xml)|*.xml</value>
  </data>
</root>